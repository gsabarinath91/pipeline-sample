# Buildspec Reference Doc: https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html

version: 0.2




phases:
  install:
    runtime-versions:
      python: 2.7
    commands:
      - echo "[+] Scanning for security vulnerability within dependencies"
      # - pipenv check (if pipenv is installed and a Pipfile is in place)
      # - Alternatively: https://www.owasp.org/index.php/OWASP_Dependency_Check
  pre_build:
    commands:
      - cd ${CODEBUILD_SRC_DIR}
      - rm -fr ${CODEBUILD_SRC_DIR}/.[0-9a-zA-Z]*; rm -fr ${CODEBUILD_SRC_DIR}/*
      - GITHUB_REPO=$(aws codepipeline get-pipeline --name ${CODEBUILD_INITIATOR#*/} --query 'pipeline.stages[0].actions[0].configuration.Repo' --output text)
      - GITHUB_OWNER=$(aws codepipeline get-pipeline --name ${CODEBUILD_INITIATOR#*/} --query 'pipeline.stages[0].actions[0].configuration.Owner' --output text)
      - GITHUB_URL="https://github.com/${GITHUB_OWNER}/${GITHUB_REPO}.git"
      - echo $GITHUB_URL
      - git init
      - git config --global credential.UseHttpPath true
      - git remote add origin ${GITHUB_URL}
      - git fetch origin ${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - git checkout ${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - ls -la
      - ls .git/
      - pip install pytest requests
      - echo "[+] Running tests..."
      - python -m pytest tests/ -v
      - pwd
      - ls -la
  build:
    commands:
      - echo "[+] Installing dependencies...."
      - pip install -r requirements.txt -t hello_world/build/
      - cp hello_world/*.py hello_world/build/
      - echo "Starting SAM packaging `date` in `pwd`"
      - aws cloudformation package --template-file template.yaml --s3-bucket $BUILD_OUTPUT_BUCKET --output-template-file packaged.yaml
  post_build:
    commands:
      - echo "SAM packaging completed on `date`"

artifacts:
  files:
    - packaged.yaml
  discard-paths: yes

cache:
  paths:
    - '/root/.cache/pip'
